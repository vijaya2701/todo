{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","storeInputData","event1","setState","formInputData","target","value","storeFinalData","storeData","state","deletestoreData","event2","temptData","window","confirm","splice","Number","id","className","type","placeholder","onKeyUp","inputEvent","onClick","this","map","item","index","deleteEvent","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MACqBA,E,kDACjB,aAAc,IAAD,8BACT,gBAMJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,cAAcF,EAAOG,OAAOC,SATvB,EAYbC,eAAe,WACX,EAAKJ,SAAS,CACVK,UAAU,GAAD,mBAAK,EAAKC,MAAMD,WAAhB,CAA0B,EAAKC,MAAML,mBAdzC,EAkBbM,gBAAgB,SAACC,GACb,IAAIC,EAAU,EAAKH,MAAMD,UACa,GAAlCK,OAAOC,QAAQ,oBACdF,EAAUG,OAAOC,OAAOL,EAAON,OAAOY,IAAI,GAC1C,EAAKd,SAAS,CACVK,UAAUI,MArBnB,EAAKH,MAAM,CACPL,cAAc,GACdI,UAAU,IAJL,E,0CA4Bb,WAAS,IAAD,OACJ,OACI,sBAAKU,UAAU,MAAf,UAEI,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,iCACI,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,cAAcC,QAAS,SAACC,GAAc,EAAKrB,eAAeqB,MAClH,uBACA,wBAAQH,KAAK,SAASD,UAAU,kBAAkBK,QAASC,KAAKjB,eAAhE,gCAOd,qBAAKW,UAAU,qBAAf,SACA,qBAAKA,UAAU,YAAf,SACM,qBAAKA,UAAU,YAAf,SACA,oBAAIA,UAAU,aAAd,SAA4BM,KAAKf,MAAMD,UAAUiB,KAAI,SAACC,EAAKC,GAAN,OAC7C,qBAAIT,UAAU,kBAAd,UAA6CQ,EAAK,wBAAQR,UAAU,iBAAiBD,GAAIU,EAAOJ,QAAS,SAACK,GAAD,OAAe,EAAKlB,gBAAgBkB,IAA3F,sBAAbD,qB,GAlDlCE,aCWlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d93ab57a.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nexport default class App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            formInputData:\"\",\r\n            storeData:[]\r\n        }\r\n    }\r\n    storeInputData=(event1)=>{\r\n        this.setState({\r\n            formInputData:event1.target.value\r\n        })\r\n    }\r\n    storeFinalData=()=>{\r\n        this.setState({\r\n            storeData:[...this.state.storeData,this.state.formInputData]\r\n        })\r\n    }\r\n    // deleting an item from array\r\n    deletestoreData=(event2)=>{\r\n        var temptData=this.state.storeData;\r\n         if(window.confirm(\"Are you sure ?\")==true){\r\n             temptData.splice(Number(event2.target.id),1)\r\n             this.setState({\r\n                 storeData:temptData\r\n             })\r\n         }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                {/* First column */}\r\n                <div className=\"col-lg-5 col-md-10\">\r\n                  <div className=\"card mt-3\">\r\n                      <div className=\"card-body\">\r\n                          <form>\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Add data...\" onKeyUp={(inputEvent)=>{this.storeInputData(inputEvent)}}/>\r\n                              <br/>\r\n                              <button type=\"button\" className=\"btn btn-primary\" onClick={this.storeFinalData}>Add data </button>\r\n                          </form>\r\n                      </div>\r\n\r\n                  </div>\r\n                </div>\r\n                {/* second column */}\r\n                <div className=\"col-lg-5 col-md-10\">\r\n                <div className=\"card mt-3\">\r\n                      <div className=\"card-body\">\r\n                      <ul className=\"list-group\">{this.state.storeData.map((item,index)=>(\r\n                              <li className=\"list-group-item\" key={index}>{item}<button className=\"btn btn-danger\" id={index} onClick={(deleteEvent)=>this.deletestoreData(deleteEvent)}>delete</button></li>\r\n        ))}</ul>\r\n \r\n                      </div>\r\n\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}